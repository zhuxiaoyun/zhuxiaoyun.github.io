<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title><![CDATA[Hello World]]></title>
    <url>%2F2018%2F03%2F06%2Fhello-world%2F</url>
    <content type="text"><![CDATA[Welcome to Hexo! This is your very first post. Check documentation for more info. If you get any problems when using Hexo, you can find the answer in troubleshooting or you can ask me on GitHub. Quick StartCreate a new post1$ hexo new "My New Post" More info: Writing Run server1$ hexo server More info: Server Generate static files1$ hexo generate More info: Generating Deploy to remote sites1$ hexo deploy Clean 清楚缓存1$ hexo clean More info: Deployment]]></content>
  </entry>
  <entry>
    <title><![CDATA[PHP 基础]]></title>
    <url>%2F2017%2F09%2F26%2Fphp%2F</url>
    <content type="text"><![CDATA[本文叙述了PHP初学者学习PHP语言的路径图。请边学习边实践。 简介 PHP 是什么？ PHP 能做什么？ PHP 编码规范 —- (例子) PHP中的FASTCGI 与 PHP-FPM的关系 简明教程 第一个PHP页面 实用的脚本 处理表单 语言参考 基本语法 类型 变量 常量 表达式 运算符 流程控制 函数 预定义变量 函数参考 字符串处理函数chr, echo, explode, implode, lcfirst, ltrim, nl2br, print, rtrim, sprintf, str_ireplace, str_split, strip_tags, stripos, strlen, strpos, strtolower, strtoupper, substr, trim, ucfirst 数组处理函数array_key_exists, array_keys, array_merge, array_pop, array_push, array_rand, array_replace, array_search, array_shift, array_values, count, in_array, ksort, list, shuffle, sort 日期/时间函数date, time, strtotime 文件操作函数basename, chmod, chown, fopen, copy, delete, dirname, fclose, feof, fgetc, fgets, file_exists, file_get_contents, file_put_contents, filesize, fopen, fputs, fread, fwrite, is_dir, is_executable, is_file, is_readable, is_writable, mkdir, pathinfo, realpath, rename, rmdir, unlink]]></content>
      <tags>
        <tag>基本语法</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Linux基础]]></title>
    <url>%2F2017%2F09%2F26%2Flinux%2F</url>
    <content type="text"><![CDATA[Linux简介基本命令man cd ls cp rm mkdir rmdir chmod chown sudo ssh scp top cat kill详细使用请参见Linux常用命令的详细用法，自行实践。在线查询Linux命令的用法请参见Linux 手册1234567891011121314151617常见命令用法 cd /var/www 切换到 /var/www目录下ls 列出所在目录下的内容 (ll 更详细)cp -r /var/www/edusoho /data/www 将 /var/www/eudosho 拷贝到 /data/www 目录下mkdir abc 当前目录下, 新建 abc文件夹rm -rf abc 强制删除abc, 如果abc是文件加, 也可用命令 rmdir abcchown -r user:group abc 将abc文件或目录的用户组和用户改为 group 和 userchmod -Rf 777 abc 给abc文件授权, 所有人都能读写sudo rm -rf abc 使用系统管理员的权限进行操作ssh -p1122 root@111.22.22.11 远程访问 111.22.22.11 服务器, 一般端口为 1122 或 22, 会提示输入密码scp -r -P 1122 allSqls.sql root@111.22.22.11:~ 将allSqls.sql拷贝到远程服务器的 ~ 目录下, 会提示输入密码top 查看服务器状态和进程tail -f a.txt 查看a.txt最后几行, 会实时刷新sudo vim a.txt 查看文本, 能进行编辑, 输入 小写字母i, 可进行编辑, 编辑完后, 按 esc, 冒号, wq, 回车, 进行保存cat a.txt 显示所有内容lsof -i:80 查看使用80端口的所有进程kill -9 1202 删除进程号为1202的进程, 如lsof -i:80命令列出来的 PID 管道（pipe） 管道的操作命令符是“|”，它负责将前一条指令传出的正确输出信息（即standard output, 不包括standard error）作为标准输入（standard input）传递个下一个命令。 比如下述命令cat输出的文件内容传递给grep命令，按照限定的字符串进行筛选，结果输出到standard output. 1cat error.log | grep &apos;RuntimeException&apos; 详情参见：管道和过滤器进一步了解参见：管道机制 输入输出重定向 标准输入重定向，使用 &lt; 或 &lt;&lt; , 从指定文件获取输入信息，如下命令将从message.log中查询含有”locale”的行并输出到屏幕： 1grep &quot;locale&quot; &lt; message.log 标准输出重定向（stdout），使用 &gt; 或 &gt;&gt; 表达，比如下面，执行test.php，将结果输出到result.html； 1php test.php &gt; result.html 详细说明和使用参见：Linux Shell 输入输出重定向详细分析 Linux用户、用户组、文件权限Linux是一个完整的多用户多任务操作系统，允许多个用户在同一时间登录同一系统执行各自不同的任务。Linux用户分成三种： 超级用户，拥有对系统的最高管理权限，默认是root； 普通用户，只能对自己目录下的文件进行访问和修改，具有登录系统的权限，比如ftp、www等； 虚拟用户／伪用户，不能登录系统，它们主要是为方便管理系统，满足相应系统进程对文件属主的要求，比如内置的bin、adm、nobody等将用户分组是Linux系统对用户进行管理和控制访问权限的手段，很大程度上简化了管理工作。 用户及文件详细操作命令参见Linux用户和用户组管理。 编辑器VIMvim，神一样的编辑器！vim = vi improved详细命令操作参见拓展阅读简明Vim练级攻略－酷壳 !!! note “注意” 已使用过VIM的同学，请学习到文章中的第三级。未使用过的同学，请学习到文章中的第一级。剩余部分列入你的当月学习的Todo List。 Ubuntu的软件的安装apt-get是ubuntu、debian的包管理工具，与red hat的yum类似，一般需要root权限执行，所以通常是 sudo apt-get …。1234567891011查找：apt-cache search querystring 安装：apt-get install packagename卸载：(保留配置文件)apt-get remove packagename完全卸载：（不保留配置文件）apt-get --purge remove packagename 详细操作参见apt-get 详细命令 课后练习1234567891011121314151617181920211． 登录进入系统。2． 使用简单命令：date，cal，who，echo，clear等，了解Linux命令格式。3． 浏览文件系统：(1) 运行pwd命令，确定当前工作目录。(2) 运行ls –l命令，理解各字段含义。(3) 使用cd命令，将工作目录改到（/）上。运行ls –l命令，结合文件系统的知识，了解各目录的作用。(5) 直接使用cd命令，或到哪里了？用pwd验证。(6) 用mkdir在根目录下建立一个子目录subdir。在用户主目录下建立可以吗？(7) 将工作目录改到subdir下。4． 文件操作：(1) 验证当前工作目录在subdir。(2) 运行date &gt; file1，然后运行cat file1，看到什么信息？(3) 运行cat subdir，会有什么结果？为什么？(4) 利用man命令显示date命令的使用说明。(5) 运行man date &gt;&gt; file1，看到什么？ 运行cat file1，看到什么？(6) 用vim 建立用户目录下的ex文件，输入一些内容。(8) 显示file1的前十行，后十行。(9) 运行cp file1 file2，然后ls –l，看到什么？ 运行mv file2 file3，然后ls –l，看到什么？ 运行cat f*，结果怎样？(10) 运行rm file3，然后ls –l，结果如何？(11) 更改file1的文件所属的用户组为root。 拓展阅读 Linux Users and Groups(中文版)) 一些常用的linux命令-gitbook vim adventures - Learning VIM while playing a game]]></content>
      <tags>
        <tag>基本命令</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[PHP语言-isset & empty]]></title>
    <url>%2F2017%2F07%2F07%2Fphp-isset-empty%2F</url>
    <content type="text"><![CDATA[php的坑程序中经常会使用isset，empty判断数组中的某个key是否存在，有值。数组使用这两个api肯定没有问题的，但是如果是string的话会发生什么事情呢？12$expected_array_got_string = 'somestring';var_dump(isset($expected_array_got_string['some_key'])); 上面的代码结果是true，还是false？下面呢？12$expected_array_got_string = 'somestring';var_dump(empty($expected_array_got_string['some_key'])); 如果不是看了官方的文档，打死我我也猜不到。让我们看看官方怎么说的.先是isset PHP 5.4 changes how isset() behaves when passed string offsets. 1234567$expected_array_got_string = 'somestring';var_dump(isset($expected_array_got_string['some_key']));var_dump(isset($expected_array_got_string[0]));var_dump(isset($expected_array_got_string['0']));var_dump(isset($expected_array_got_string[0.5]));var_dump(isset($expected_array_got_string['0.5']));var_dump(isset($expected_array_got_string['0 Mostel'])); 以上例程在PHP 5.3中的输出：123456bool(true)bool(true)bool(true)bool(true)bool(true)bool(true) 以上例程在PHP 5.4中的输出：123456bool(false)bool(true)bool(true)bool(true)bool(false)bool(false) empty的表现 PHP 5.4 修改了当传入的是字符串偏移量时， empty() 的行为 1234567$expected_array_got_string = 'somestring';var_dump(empty($expected_array_got_string['some_key']));var_dump(empty($expected_array_got_string[0]));var_dump(empty($expected_array_got_string['0']));var_dump(empty($expected_array_got_string[0.5]));var_dump(empty($expected_array_got_string['0.5']));var_dump(empty($expected_array_got_string['0 Mostel'])); 以上例程在PHP 5.3中的输出：123456bool(false)bool(false)bool(false)bool(false)bool(false)bool(false) 以上例程在PHP 5.4中的输出：123456bool(true)bool(false)bool(false)bool(false)bool(true)bool(true) 是不是很惊讶。直到我看到官方的这个文档我才相信问题真的出现在isset这个api上（哭）。为了让大家都知道有这个问题，特定把这个分享出来，大家在用这两个api的时候，需要认真考虑一下。这也让我想到一个问题，我们是不是应该提供一些工具类(系统也确实有很多Toolkit)，来封装类似这样的api（否则哪天我们真的升级php版本的话那会不会是一个噩梦）。比如：12345678910111213class XxxxToolkit&#123; public static function isset($value) &#123; if(is_array($value))&#123;xxxxx&#125;else&#123;xxxxx&#125; &#125;&#125;class Client&#123; $var = "xxxxx"; XxxxToolkit::isset($var);&#125; 欢迎大家讨论。]]></content>
  </entry>
  <entry>
    <title><![CDATA[多PC同步管理博客]]></title>
    <url>%2F2017%2F06%2F07%2F%E5%A4%9APC%E5%90%8C%E6%AD%A5%E7%AE%A1%E7%90%86%E5%8D%9A%E5%AE%A2%2F</url>
    <content type="text"><![CDATA[链接：http://www.imooc.com/article/9707?block_id=tuijian_wz来源：慕课网 A电脑备份博客内容到github 配置.gitignore文件。进入博客目录文件夹下，找到此文件，用sublime text 打开，在最后增加两行内容/.deploy_git和/public 初始化仓库。在博客根目录下，在git bash下依次执行git init和git remote add origin 为远程仓库地址。 同步到远程仓库。gitbash下依次执行以下命令 123$ git add . #添加目录下所有文件 $ git commit -m "更新说明" #提交并添加更新说明 $ git push -u origin master #推送更新到远程仓库 B电脑拉下远程仓库文件在B电脑上同样先安装好node、git、ssh、hexo，然后建好hexo文件夹，安装好插件，（然后选做：将备份到远程仓库的文件及文件夹删除），然后执行以下命令： 1234$ git init$ git remote add origin &lt;server&gt;$ git fetch --all$ git reset --hard origin/master 发布博客后同步在B电脑发布完博客之后，记得将博客备份同步到远程仓库执行以下命令： 1234$ git add .#可以用git master 查看更改内容$ git commit -m "更新信息"$ git push -u origin master #以后每次提交可以直接git push 平时同步管理每次想写博客时，先执行：git pull进行同步更新。发布完文章后同样按照上面的 发布博客后同步 同步到远程仓库。 平时常用命令整理12345678$ git pull #同步更新$ hexo new post "新建文章" #简写形式 hexo n "新建文章"$ hexo clean #清除旧的public文件夹$ hexo generate #生成静态文件 简写形式 hexo g$ hexo deploy #发布到github上 简写形式 hexo d$ git add . #添加更改文件到缓存区$ git commit -m "更新说明" #提交到本地仓库$ git push -u origin master #推送到远程仓库进行备份]]></content>
  </entry>
  <entry>
    <title><![CDATA[PHP开发环境搭建(Ubuntu Linux)]]></title>
    <url>%2F2017%2F05%2F27%2Fphp-develop-environment-for-linux%2F</url>
    <content type="text"><![CDATA[本文将讲述PHP-FPM、Nginx、MySQL在Ubuntu 14.04/16.04下的安装及配置。PHP-FPM/Nginx/MySQL的关系如下图所示。 123456 --------- ----------- ---------浏览器-------&gt; | Nginx | ---FastCGI--&gt; | PHP-FPM | -------&gt; | MySQL | --------- ----------- --------- ------------------------------------------------------ | Linux Server | ------------------------------------------------------ 配置Ubuntu的软件源因为Ubuntu默认的软件源，服务器不在国内，装起软件来会比较慢，所以得先将源改为国内的。 备份源配置文件 1sudo cp /etc/apt/sources.list /etc/apt/sources.list.raw 更新配置文件Ubuntu 14.04 使用以下命令： 123456789101112echo &quot;deb http://mirrors.aliyun.com/ubuntu/ trusty main restricted universe multiversedeb http://mirrors.aliyun.com/ubuntu/ trusty-security main restricted universe multiversedeb http://mirrors.aliyun.com/ubuntu/ trusty-updates main restricted universe multiversedeb http://mirrors.aliyun.com/ubuntu/ trusty-proposed main restricted universe multiversedeb http://mirrors.aliyun.com/ubuntu/ trusty-backports main restricted universe multiversedeb-src http://mirrors.aliyun.com/ubuntu/ trusty main restricted universe multiversedeb-src http://mirrors.aliyun.com/ubuntu/ trusty-security main restricted universe multiversedeb-src http://mirrors.aliyun.com/ubuntu/ trusty-updates main restricted universe multiversedeb-src http://mirrors.aliyun.com/ubuntu/ trusty-proposed main restricted universe multiversedeb-src http://mirrors.aliyun.com/ubuntu/ trusty-backports main restricted universe multiverse&quot; | sudo tee /etc/apt/sources.list 使新的配置文件生效 1sudo apt-get update 更新系统软件 更新 1sudo apt-get upgrade 移除不再需要的软件包 1sudo apt-get autoremove 系统重启 1sudo reboot 安装Nginx1sudo apt-get install nginx 验证Nginx安装是否成功在浏览器中打开 http://localhost 出现：12Welcome to nginx!... 表示安装成功了。 安装MySQL1sudo apt-get install mysql-server 安装的时候会询问你设置root的密码，请直接按回车，即设置密码为空。 验证MySQL是否安装成功在命令行输入mysql -uroot -hlocalhost，出现：12345678910111213Welcome to the MySQL monitor. Commands end with ; or \g.Your MySQL connection id is 8Server version: 5.7.12-0ubuntu1.1 (Ubuntu)Copyright (c) 2000, 2016, Oracle and/or its affiliates. All rights reserved.Oracle is a registered trademark of Oracle Corporation and/or itsaffiliates. Other names may be trademarks of their respectiveowners.Type &apos;help;&apos; or &apos;\h&apos; for help. Type &apos;\c&apos; to clear the current input statement.mysql&gt; 表示安装成功！ 输入exit 回车，退出mysql。 安装PHP1sudo apt-get install php5 php5-cli php5-curl php5-fpm php5-intl php5-mcrypt php5-mysqlnd php5-gd 创建/var/www目录：12sudo mkdir /var/wwwsudo chown -Rf YOUR_USER:YOU_GROUP /var/www 安装VIM:1sudo apt-get install vim 修改配置文件vim /etc/nginx/sites-enabled/default，开启PHP相关参数。将配置替换为如下：123456789101112131415161718192021server &#123; listen 80 default_server; listen [::]:80 default_server ipv6only=on; root /var/www; index index.html index.htm; server_name localhost; location / &#123; try_files $uri $uri/ =404; &#125; location ~ \.php$ &#123; fastcgi_split_path_info ^(.+\.php)(/.+)$; fastcgi_pass unix:/var/run/php5-fpm.sock; fastcgi_index index.php; include fastcgi_params; &#125;&#125; 创建测试脚本：12echo &quot;&lt;?phpphpinfo();&quot; &gt; /var/www/phpinfo.php 浏览器打开：http://localhost/phpinfo.php 安装phpMyAdmin：进入www目录123wget https://files.phpmyadmin.net/phpMyAdmin/4.6.5.2/phpMyAdmin-4.6.5.2-all-languages.ziptar -zxvf phpMyAdmin-4.6.5.2-all-languages.zipmv phpMyAdmin-4.6.5.2-all-languages.zip phpMyAdmin 浏览器打开：http://localhost/phpMyAdmin/index.php出现页面 输入帐号root密码 进入出现PHP相关信息，表明安装成功。 开发环境下，开启PHP的错误信息显示编辑sudo vim /etc/php5/fpm/php.ini，找到相应配置，修改为如下：123error_reporting = E_ALLdisplay_errors = Ondisplay_startup_errors = On 重启php-fpm:1sudo service php5-fpm restart 安装SublimeText 3（此步骤可能安装不了，可以到网上自行下载）SublimeText 3 是目前最流行的开发编辑器。 123sudo add-apt-repository -y ppa:webupd8team/sublime-text-3sudo apt-get updatesudo apt-get install -y sublime-text-installer 设置SublimeText 3 等宽字体打开菜单Preferences -&gt; Setting-User，修改内容，并保存：123456&#123; &quot;font_face&quot;: &quot;Ubuntu Mono&quot;, &quot;font_size&quot;: 12, &quot;highlight_line&quot;: true, &quot;translate_tabs_to_spaces&quot;: true&#125; 安装输入法Fcitx因为fcitx输入法能在SublimeText 3下输入中文。 1234567sudo add-apt-repository -y ppa:fcitx-team/nightlysudo apt-get updatesudo apt-get install -y fcitx fcitx-config-gtk fcitx-sunpinyin fcitx-googlepinyin fcitx-module-cloudpinyinsudo apt-get install -y build-essential libgtk2.0-devsudo apt-get install -y fcitx-table-allsudo apt-get install im-switchim-switch -s fcitx -z default 如无im-switch这个命令，则执行：1im-config -n fcitx 安装完之后，重启电脑。即可使用fcitx输入法，按Ctrl + 空格，调出输入法。 解决SublimeText 3 中文输入法问题12cd /opt/sublime_text/sudo wget https://github.com/lyfeyaj/sublime-text-imfix/raw/master/lib/libsublime-imfix.so 12345678sudo mv /usr/bin/subl /usr/bin/subl_rawecho &quot;#!/bin/shexport LD_PRELOAD=/opt/sublime_text/libsublime-imfix.soexec /opt/sublime_text/sublime_text \&quot;\$@\&quot;&quot; | sudo tee /usr/bin/subl sudo chmod a+x /usr/bin/subl 编辑vim /usr/share/applications/sublime_text.desktop，将内容替换为：1234567891011121314151617181920212223[Desktop Entry]Version=1.0Type=ApplicationName=Sublime TextGenericName=Text EditorComment=Sophisticated text editor for code, markup and proseExec=bash -c &quot;LD_PRELOAD=/opt/sublime_text/libsublime-imfix.so exec /opt/sublime_text/sublime_text %F&quot;Terminal=falseMimeType=text/plain;Icon=sublime-textCategories=TextEditor;Development;StartupNotify=trueActions=Window;Document;[Desktop Action Window]Name=New WindowExec=bash -c &quot;LD_PRELOAD=/opt/sublime_text/libsublime-imfix.so exec /opt/sublime_text/sublime_text -n&quot;OnlyShowIn=Unity;[Desktop Action Document]Name=New FileExec=bash -c &quot;LD_PRELOAD=/opt/sublime_text/libsublime-imfix.so exec /opt/sublime_text/sublime_text --command new_file&quot;OnlyShowIn=Unity;]]></content>
  </entry>
  <entry>
    <title><![CDATA[PHP获取时间的坑]]></title>
    <url>%2F2017%2F05%2F27%2FPHP%E8%8E%B7%E5%8F%96%E6%97%B6%E9%97%B4%E7%9A%84%E5%9D%91%2F</url>
    <content type="text"><![CDATA[php的 date() 函数，string date ( string $format [, int $timestamp ] )，可以格式化一个本地时间或日期，返回将整数timestamp按照给定字串而产生的字串，如果没有给定时间戳，则使用本地当前时间，即timestamp是可选的，默认值是time()。date()的使用非常灵活，下面介绍使用date()获取当月的第一天、当月的最后一天，下月的第一天、下月的最后一天 获取当前时间12echo date('Y-m-d');echo date('Y-m-d H:i:s'); 获取当前月的第一天1echo date('Y-m-01'); 获取当前月的最后一天1echo date('Y-m-t'); 获取下一月的最后一天1echo date('Y-m-t', strtotime('+1 month')); 获取下一月的第一天1echo date('Y-m-01', strtotime('+1 month')); Warning：请注意，这里有一个坑，当当前月为大月时，当天的时间为最后一天，如2017-05-31，加一个月取第一天并不会得到下一个月的第一天，而会顺延到下下月的某一天（取决于多的天数），所以正确的应该是，当前月第一天加一个月以下是正确的写法： 获取下一月的第一天1echo date('Y-m-01', strtotime('+1 month', strtotime(date('Y-m-01'))))."&lt;br&gt;"; 获取下一月的最后一天1echo date('Y-m-t', strtotime('+1 month', strtotime(date('Y-m-01'))))."&lt;br&gt;"; 同样，php的Symfony框架提供的date_modify()，twig扩展也有同样的问题，给遇到坑的小伙伴们助攻！]]></content>
  </entry>
  <entry>
    <title><![CDATA[我的第一篇博客]]></title>
    <url>%2F2017%2F05%2F12%2Ffirst-blog%2F</url>
    <content type="text"><![CDATA[你好，欢迎来到我的个人技术博客。]]></content>
  </entry>
</search>
